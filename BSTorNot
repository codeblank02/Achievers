package sumArrayInd;
import java.util.*;
import java.util.Queue;
public class BSTorNot{ 
    Node root; 
    Node prev; 
    boolean BST(){ 
        prev=null; 
        return check(root); 
    } static class Node{ 
        int data; 
        Node left, right; 
        public Node(int item) { 
            data=item; 
            left=right=null; 
        } 
    } 
    boolean check(Node node){
        if (node!=null) { 
            if(!check(node.left)){
                return false; 
            }
            if(prev!=null && node.data<= prev.data ){
                return false; 
            }
            prev=node; 
            return check(node.right); 
        } 
        return true; 
    } 
    static void insert(Node temp,int k) { 
        Queue<Node> q =new LinkedList<Node>(); 
        q.add(temp); 
        while(!q.isEmpty()) { 
            temp=q.peek(); 
            q.remove(); 
            if(temp.left==null) { 
                temp.left=new Node(k); 
                break; 
            }
            else
                q.add(temp.left); 
            if(temp.right==null) { 
                temp.right=new Node(k); 
                break; 
            } else
                q.add(temp.right); 
        } 
    }
    public static void main(String args[]) 
    { 
        BSTorNot tree=new BSTorNot(); 
        tree.root=new Node(4); 
        tree.root.left=new Node(2); 
        tree.root.right=new Node(5); 
        tree.root.left.left=new Node(1); 
        tree.root.left.right=new Node(3); 
        if (tree.BST()){
            System.out.println("Given BT is a BST"); 
        }
        else {
            System.out.println("Given BT is Not a BST");
        }
    } 
} 
